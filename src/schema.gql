# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """The 2FA validation"""
  is2faValid: Boolean

  """The OTP URL"""
  otpAuthUrl: String

  """The status"""
  status: String

  """The user object"""
  user: User
}

type Avatar {
  """The date when the avatar was created"""
  createdAt: DateTime!

  """Default filename of the avatar"""
  defaultFilename: String!

  """Filename of the avatar"""
  filename: String!

  """Unique identifier for the avatar"""
  id: String!

  """The date when the avatar was last updated"""
  updatedAt: DateTime!

  """The ID of the associated user"""
  userId: String!
}

type Connection {
  """The date when the connection was created"""
  createdAt: DateTime!

  """Unique identifier for the connection"""
  id: String!

  """The intra_42 identifier associated with the connection"""
  intra_42: Int

  """
  Indicates whether two-factor authentication is enabled for the connection
  """
  is2faEnabled: Boolean!

  """One-time password associated with the connection"""
  otp: String

  """The date when the one-time password was created"""
  otpCreatedAt: DateTime

  """The date when the connection was last updated"""
  updatedAt: DateTime!

  """The ID of the associated user"""
  userId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Match {
  """The date when the match was created"""
  createdAt: DateTime!

  """The date of the match"""
  date: DateTime!

  """Unique identifier for the match"""
  id: String!

  """The loser of the match"""
  loser: User!

  """The ID of the loser"""
  loserId: String!

  """The score of the match"""
  score: [Int!]!

  """The date when the match was updated"""
  updatedAt: DateTime!

  """The winner of the match"""
  winner: User!

  """The ID of the winner"""
  winnerId: String!
}

type Mutation {
  """Blocks a user"""
  blockUser(blockId: String!, userId: String!): User!

  """Creates a new match with the given data"""
  createMatch(newMatchInput: NewMatchInput!): Match!

  """Deletes all matches in development environment"""
  deleteAllMatches: String!

  """Deletes all users in development environment"""
  deleteAllUsers: String!

  """Deletes a user"""
  deleteUser(userId: String!): User!

  """Follows a user"""
  followUser(followId: String!, userId: String!): User!

  """Generates a 2FA token for the current user"""
  generate2faToken(userId: String!, username: String!): Auth!

  """Turns off 2FA for the current user"""
  turnOff2fa(token: String!, userId: String!): Auth!

  """Turns on 2FA for the current user"""
  turnOn2fa(token: String!, userId: String!): Auth!

  """Unblocks a user"""
  unblockUser(unblockId: String!, userId: String!): User!

  """Unfollows a user"""
  unfollowUser(unfollowId: String!, userId: String!): User!

  """Updates the avatar of a user"""
  updateAvatar(avatar: String!, userId: String!): User!

  """Updates the username of a user"""
  updateUsername(userId: String!, username: String!): User!

  """Verifies a 2FA token for the current user"""
  verify2fa(token: String!, userId: String!): Auth!
}

input NewMatchInput {
  """The ID of the loser"""
  loserId: String!

  """The score of the match"""
  score: [Int!]!

  """The ID of the winner"""
  winnerId: String!
}

type Query {
  """Retrieves all matches with their associated data"""
  getAllMatches: [Match!]!

  """Retrieves all users with their associated data"""
  getAllUsers: [User!]!

  """Retrieves a match by its ID with associated data"""
  getMatchById(matchId: String!): Match!

  """Retrieves all matches for a user by their ID"""
  getMatchesByUserId(userId: String!): [Match!]!

  """Retrieves a user by their ID with associated data"""
  getUserById(id: String!): User!

  """Retrieves a list of matches by their IDs"""
  populateMatchIds(matchIds: [String!]!): [Match!]!

  """Retrieves a list of users by their IDs"""
  populateUserIds(userIds: [String!]!): [User!]!
}

type User {
  """The associated avatar entity"""
  avatar: Avatar

  """Users the user is blocking"""
  blocked: [String!]!

  """The associated connection entity"""
  connection: Connection

  """Date the user was created"""
  createdAt: DateTime!

  """Users the user is following"""
  following: [String!]!

  """Unique identifier for the user"""
  id: String!

  """User rank"""
  rank: Int!

  """User status"""
  status: String!

  """Date the user was last updated"""
  updatedAt: DateTime!

  """Username chosen by the user"""
  username: String
}